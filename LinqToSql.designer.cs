#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HelloWorld
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="linq_to_sql")]
	public partial class LinqToSqlDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertZaposlenik(Zaposlenik instance);
    partial void UpdateZaposlenik(Zaposlenik instance);
    partial void DeleteZaposlenik(Zaposlenik instance);
    partial void InsertOdjel(Odjel instance);
    partial void UpdateOdjel(Odjel instance);
    partial void DeleteOdjel(Odjel instance);
    #endregion
		
		public LinqToSqlDataContext() : 
				base(global::HelloWorld.Properties.Settings.Default.linq_to_sqlConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqToSqlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Zaposlenik> Zaposleniks
		{
			get
			{
				return this.GetTable<Zaposlenik>();
			}
		}
		
		public System.Data.Linq.Table<Odjel> Odjels
		{
			get
			{
				return this.GetTable<Odjel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zaposlenik")]
	public partial class Zaposlenik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ImePrezime;
		
		private string _Email;
		
		private string _Telefon;
		
		private string _Adresa;
		
		private System.Nullable<int> _OdjelID;
		
		private EntityRef<Odjel> _Odjel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnImePrezimeChanging(string value);
    partial void OnImePrezimeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTelefonChanging(string value);
    partial void OnTelefonChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnOdjelIDChanging(System.Nullable<int> value);
    partial void OnOdjelIDChanged();
    #endregion
		
		public Zaposlenik()
		{
			this._Odjel = default(EntityRef<Odjel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImePrezime", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string ImePrezime
		{
			get
			{
				return this._ImePrezime;
			}
			set
			{
				if ((this._ImePrezime != value))
				{
					this.OnImePrezimeChanging(value);
					this.SendPropertyChanging();
					this._ImePrezime = value;
					this.SendPropertyChanged("ImePrezime");
					this.OnImePrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefon", DbType="NChar(50)")]
		public string Telefon
		{
			get
			{
				return this._Telefon;
			}
			set
			{
				if ((this._Telefon != value))
				{
					this.OnTelefonChanging(value);
					this.SendPropertyChanging();
					this._Telefon = value;
					this.SendPropertyChanged("Telefon");
					this.OnTelefonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(80) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OdjelID", DbType="Int")]
		public System.Nullable<int> OdjelID
		{
			get
			{
				return this._OdjelID;
			}
			set
			{
				if ((this._OdjelID != value))
				{
					if (this._Odjel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOdjelIDChanging(value);
					this.SendPropertyChanging();
					this._OdjelID = value;
					this.SendPropertyChanged("OdjelID");
					this.OnOdjelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Odjel_Zaposlenik", Storage="_Odjel", ThisKey="OdjelID", OtherKey="ID", IsForeignKey=true)]
		public Odjel Odjel
		{
			get
			{
				return this._Odjel.Entity;
			}
			set
			{
				Odjel previousValue = this._Odjel.Entity;
				if (((previousValue != value) 
							|| (this._Odjel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Odjel.Entity = null;
						previousValue.Zaposleniks.Remove(this);
					}
					this._Odjel.Entity = value;
					if ((value != null))
					{
						value.Zaposleniks.Add(this);
						this._OdjelID = value.ID;
					}
					else
					{
						this._OdjelID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Odjel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Odjel")]
	public partial class Odjel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Naziv;
		
		private EntitySet<Zaposlenik> _Zaposleniks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    #endregion
		
		public Odjel()
		{
			this._Zaposleniks = new EntitySet<Zaposlenik>(new Action<Zaposlenik>(this.attach_Zaposleniks), new Action<Zaposlenik>(this.detach_Zaposleniks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Odjel_Zaposlenik", Storage="_Zaposleniks", ThisKey="ID", OtherKey="OdjelID")]
		public EntitySet<Zaposlenik> Zaposleniks
		{
			get
			{
				return this._Zaposleniks;
			}
			set
			{
				this._Zaposleniks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zaposleniks(Zaposlenik entity)
		{
			this.SendPropertyChanging();
			entity.Odjel = this;
		}
		
		private void detach_Zaposleniks(Zaposlenik entity)
		{
			this.SendPropertyChanging();
			entity.Odjel = null;
		}
	}
}
#pragma warning restore 1591
